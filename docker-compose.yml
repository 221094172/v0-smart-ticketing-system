version: '3.8'

services:
  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.5.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transport-network

  # Kafka broker
  kafka:
    image: confluentinc/cp-kafka:7.5.0
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - transport-network

  # MongoDB
  mongodb:
    image: mongo:7.0
    container_name: mongodb
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: transport_ticketing
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - transport-network

  # Passenger Service
  passenger-service:
    build:
      context: ./services/passenger-service
      dockerfile: Dockerfile
    container_name: passenger-service
    ports:
      - "9001:9001"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

  # Transport Service
  transport-service:
    build:
      context: ./services/transport-service
      dockerfile: Dockerfile
    container_name: transport-service
    ports:
      - "9002:9002"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

  # Ticketing Service
  ticketing-service:
    build:
      context: ./services/ticketing-service
      dockerfile: Dockerfile
    container_name: ticketing-service
    ports:
      - "9003:9003"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

  # Payment Service
  payment-service:
    build:
      context: ./services/payment-service
      dockerfile: Dockerfile
    container_name: payment-service
    ports:
      - "9004:9004"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

  # Notification Service
  notification-service:
    build:
      context: ./services/notification-service
      dockerfile: Dockerfile
    container_name: notification-service
    ports:
      - "9005:9005"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

  # Admin Service
  admin-service:
    build:
      context: ./services/admin-service
      dockerfile: Dockerfile
    container_name: admin-service
    ports:
      - "9006:9006"
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/transport_ticketing?authSource=admin
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - mongodb
      - kafka
    networks:
      - transport-network

volumes:
  mongodb_data:

networks:
  transport-network:
    driver: bridge
